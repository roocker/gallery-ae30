---
import Layout from "../layouts/Layout.astro";
// import * as teamPage from "../content/pages/team.md";
import { marked } from "marked";
import "../styles/page.css";
import { getCollection, getEntry } from "astro:content";
import { getImage } from "astro:assets";

import { Image } from "astro:assets";

const page = await getEntry("team", "team");
// const page = await getCollection("team");

// console.log("PAGECOL:", page);

const p = page.data;

// console.log("frontmatter:", p);

const allMembersWithArchived = p.member;

// purge when archived from list!

const allMembers = allMembersWithArchived.filter(
  member => !member.mode || !member.mode.archived
);
const impMembers = allMembers.filter(
  mem => mem.mode && mem.mode.highlighted === true
);
const forMembers = allMembers.filter(
  mem => mem.mode && mem.mode.former === true
);
const actMembers = allMembers.filter(
  mem =>
    !mem.mode || (mem.mode.highlighted !== true && mem.mode.former !== true)
);

// #rev astro way to render markdown from frontmatter
const teamText = marked(p.text);

// Image Optimization
// -----------------------------------

// teamfoto.img
// member.img

/* const optTeamFoto = await getImage({
  src: p.teamfoto.img,
  width: 1000,
  format: "webp",
}); */

// console.log("OPTTEAMFOTO:", optTeamFoto.src);

// ALT
// import budl from "~/assets/media/ai-teamfoto.jpg";
// import(page.teamfoto.img).then(budl);

// import budl2 from "page.teamfoto.img";

// const optTeamFoto = getImage(page.teamfoto.img);
// console.log("whooooo", budl)
//
console.log("alt:", p.teamfoto.alt);
---

<Layout title="AE30 - Team" description="Team" image="">
  <section class="page_sect" aria-label="Team Content">
    <section class="block group">
      <div class="title_wrapper tphoto">
        <h1 class="page_headline_white" set:html={p.title} />
        <Image src={p.teamfoto.img} alt={p.teamfoto.alt} width={1080} />
      </div>

      <div class="text" set:html={teamText} />

      <div class="next_control">
        <button
          onclick="location.href='#members_highlighted'"
          class="btn modal_toggle_btn"
          title="Architekten"
        >
          <svg class="btn_svg">
            <use class="btn_use" href="/svg.svg#arrow"></use>
          </svg>
        </button>
      </div>
    </section>

    <section id="members_highlighted" class="block members">
      <h2 class="members">{page.heading_members_highlighted}</h2>
      <ul class="team_list highlighted">
        {
          impMembers.map(mem => (
            <li>
              <ul class="team_member">
                {mem.img ? (
                  <li key={mem.img}>
                    <!-- <img src={mem.img.src} alt={mem.name} /> -->
                    <Image width={300} src={mem.img} alt={mem.name} />
                  </li>
                ) : (
                  ""
                )}
                <li key={mem.name}>
                  <h3>{mem.name}</h3>
                </li>

                {mem.details &&
                  mem.details.map(det => (
                    <li>
                      <span class="detail_desc">{det.description}</span>{" "}
                      {det.detail}
                    </li>
                  ))}
              </ul>
            </li>
          ))
        }
      </ul>

      <div class="next_control">
        <button
          onclick="location.href='#members_active'"
          class="btn modal_toggle_btn"
          title="Aktuelle Mitarbeiter"
        >
          <svg class="btn_svg">
            <use class="btn_use" href="/svg.svg#arrow"></use>
          </svg>
        </button>
      </div>
    </section>

    <section id="members_active" class="block members">
      <h2 class="members">{p.heading_members_active}</h2>

      <ul class="team_list active">
        {
          actMembers.map(mem => (
            <li>
              <ul class="team_member">
                {mem.img ? (
                  <li key={mem.img}>
                    <!-- <img src={mem.img.src} alt={mem.name} /> -->
                    <Image width={300} src={mem.img} alt={mem.name} />
                  </li>
                ) : (
                  ""
                )}
                <li key={mem.name}>
                  <h3>{mem.name}</h3>
                </li>

                {mem.details &&
                  mem.details.map(det => (
                    <li>
                      <span class="detail_desc">{det.description}</span>{" "}
                      {det.detail}
                    </li>
                  ))}
              </ul>
            </li>
          ))
        }
      </ul>

      <div class="next_control">
        <button
          onclick="location.href='#members_former'"
          class="btn modal_toggle_btn"
          title="Ehemalige Mitarbeiter"
        >
          <svg class="btn_svg">
            <use class="btn_use" href="/svg.svg#arrow"></use>
          </svg>
        </button>
      </div>
    </section>

    <section id="members_former" class="block members">
      <h2 class="members">{p.heading_members_former}</h2>

      <ul class="team_list former">
        {forMembers.map(mem => <li key={mem.name}>&nbsp;{mem.name}, </li>)}
      </ul>

      <div class="next_control">
        <button
          onclick="location.href='#top'"
          class="btn modal_toggle_btn"
          title="Team"
        >
          <svg class="btn_svg top">
            <use class="btn_use" href="/svg.svg#arrow"></use>
          </svg>
        </button>
      </div>
    </section>
  </section>
</Layout>
<style></style>
