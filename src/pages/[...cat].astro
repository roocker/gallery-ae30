---
import CatProj from '../components/Cat_proj.astro';
import Layout from '../layouts/Layout.astro';
import GridProj from '../components/GridProj';
import GridControlWrapper from '../components/GridControlWrapper';
import { CollectionEntry, getCollection } from 'astro:content';

export async function getStaticPaths(){
  const allProjects = await getCollection('projects');

  const projMappedtoCats = new Map();

  allProjects.forEach(proj => {
  const cat = proj.data.category;
    if (!projMappedtoCats.has(cat)) {
    projMappedtoCats.set(cat, new Set());
    }
    const projOfCat = projMappedtoCats.get(cat);
    projOfCat.add(proj);
    });
    // console.log(allProjects);
    // console.log(proj);


  return [...projMappedtoCats.entries()].map(([cat, proj]) => {
    return {
      params: { cat },
      props: { cat, proj }
      }
    });
  } 

  // const allProjects = await getCollection('projects');

// type Props = CollectionEntry<'projects'>;
  const { cat } = Astro.params;
  console.log("Angefrage Kategorie:", cat);
  const proj = Array.from(Astro.props.proj);
  console.log("catprojects:", proj);
  // const titu = proj.map(proj => proj.data.title);
  // console.log("HIER ALLE TITEL der CATEGORY:", titu);
---



<Layout title="AE30 - Kategorie - work in progress" description="Kategorie" image="">
<section id="grid-gallery" aria-label="Gallery Grid Overview">


    <GridProj
    client:only
    projects={proj}
    />

    <GridControlWrapper
    client:load
    btnname="Filter MenÃ¼ ein-/ausblenden"
    />

  </section>


</Layout>
<style>
  #grid-gallery{
    display: grid;
    grid-template-columns: repeat(var(--gcolnum), 1fr);
    grid-auto-rows: min-content;
    grid-auto-flow: dense;

    align-items: flex-start;
    gap: calc( 0.5 * var(--ggapspx));
    margin-bottom: 10em;
  }
  @media only screen and (min-width: 64em /* var(--vwS) */) { 
    #grid-gallery{
      gap: var(--ggapspx);
    }
  }
</style>
