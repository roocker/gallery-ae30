---
import { getCollection } from "astro:content";
import PageLayout from "../../../layouts/PageLayout.astro";
import ListedArticle from "../../../components/ListedArticle.astro";

export async function getStaticPaths() {
    const articles = await getCollection("articles");

    const articlesMappedToTags = new Map();

    articles.forEach(article => {
        article.data.tags.forEach(tag => {
            if (!articlesMappedToTags.has(tag)) {
            articlesMappedToTags.set(tag, new Set());
            }
            const articlesOfTag = articlesMappedToTags.get(tag);
            articlesOfTag.add(article);
        });
    });
    return [...articlesMappedToTags.entries()].map(([tag, articles]) => {
        return {
            params: { tag },
            props: {
                articles
            }
        }
    })
}

/* 
MEINSY
const projMappedToCats = new Map();

  projects.forEach(proj => {
    proj.data.category.forEach(cat =>{
      if (!projMappedToCats.has(cat)) {
      projMappedToCats.set(cat, new Set());
      }
      const projOfCat = projMappedToCats.get(cat);
      projOfCat.add(proj);
    });
  });

  return [...projMappedToCats.entries()].map(([cat, projects]) => {
    return {
      params: { cat },
      props: { projects }
      }
    });
  } */

const { tag } = Astro.params;
const articles = Array.from(Astro.props.articles);
---

<PageLayout {...article.data}>
    <header>
        <h1>{tag}</h1>
    </header>
    <section id="articles">
        <h2>Articles</h2>
        {articles.map(article => (
            <ListedArticle {article} />
        ))}
    </section>
</PageLayout>
