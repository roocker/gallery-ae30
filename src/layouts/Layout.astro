---
/*
TODO:
- [ ] main = wrapper?
- [ ] Mobile WIDE/projekte wierd

*/

import "../styles/normalize.css";
import Nav from "../components/Nav.astro";
import "@fontsource-variable/material-symbols-rounded";
import "@fontsource-variable/material-symbols-rounded/fill.css";
import "@fontsource-variable/source-code-pro";
import "@fontsource/source-sans-pro";

export interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site); // #rev??

const { title, description, image = "/placeholder-social.jpg" } = Astro.props; // #rev??

// DS Variables
// fonts & typography
//-------------------------------------------------
// fsans, fsans2, fserif, fserif2, fsize, fline_height, fsize_title, fsize_h2, fsize_h3, fsize_h4,
const fsans = "'Arial', sans-serif";
const fsans2 = "'Source Sans Pro', sans-serif";
const fsans3 = "'Source Code Pro Variable', sans-serif";
const fserif = "sans-serif";
const fserif2 = "sans-serif";
const fsize = "1rem";
const fline_height = "1.5em";
const fsize_title = "3rem";
const fsize_h2 = "2rem";
const fsize_h3 = "1.5rem";
const fsize_h4 = "1rem";

// Viewport Queries
//-------------------------------------------------
// 1 em = 16px
// bei 366/367px passiert was! bilder werden nicht mehr kleiner??

const vwP: string = 37.5 + "em"; // <600px  (max-width) Mobile Phones <600px (max)
const vwPl: string = 37.5 + "em"; // >600px  (min-width) Landscape Mobile Phones and Portrait Tablet >600px (min)
const vwT: string = 48 + "em"; // >768px  (min-width) Landscape Tablets
const vwS: string = 64 + "em"; // >1024px (min-width) Desktop S
const vwM: string = 85.375 + "em"; // >1366px (min-width) Desktop M
const vwL: string = 120 + "em"; // >1920px (min-width) Desktop L
const vwTV: string = 160 + "em"; // >2560px (min-width) TV 4k
const vwRetina: string =
  "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)"; // retina

// grid
//-------------------------------------------------
// Modul definition
// 4px: 0.25rem, 0.1cm, 0.1q, 1/16in, 1/40cm, 4pt
// 8px: 0.5rem, 0.2cm, 0.2q, 1/8in, 1/20cm, 8pt
// 16px: 1rem, 0.4cm, 0.4q, 1/4in, 1/10cm, 16pt
// 32px: 2rem, 0.8cm, 0.8q, 1/2in, 1/5cm, 32pt
// 64px: 4rem, 1.6cm, 1.6q, 2/5in, 1/2.5cm, 64pt

// gmodul, gcolnum, ggaps, ggapspx, gmarginL, gmarginLpx,

const gmodul: number = 16; // =16
const gmodulpx: string = 16 + "px"; // =16px
const gmodulem: string = 1 + "em"; // =16px=1em
const gcolnum: number = 12;
const ggaps: number = 2 * gmodul; // 32px=2em
const ggapspx: string = ggaps + "px";
const ggapsem: string = ggaps / 16 + "em";
const gmargin: number = 2 * gmodul; // 32
const gmarginpx: string = gmargin + "px";
const gmarginem: string = gmargin / 16 + "em";

/* --lay-margin-M: 64px; */
/* --lay-margin-S: 64px; */
/* --lay-margin-T: 64px; */
/* --lay-margin-H: 16px; */

// const growheightpx =  "16px";
// img-proportion-gal-L: 1.5;
// row-height-L: 16px;

// colors
//-------------------------------------------------
// caccent, caccent2, cblack, cwhite, cgrey, cgrey20, cgrey60, cgrey80, cbg,

const caccent = "#1111ee";
const caccent2 = "#9f1db8";
const cblack = "#111111";
const cblack20 = "rgb(1,1,1,.2)";
const cblack30 = "rgb(1,1,1,.3)";
const cblack50 = "rgb(1,1,1,.5)";
const cblack80 = "rgb(1,1,1,.8)";
const cwhite = "#FFFFFF";
const cwhite20 = "rgb(255,255,255,.2)";
const cwhite30 = "rgb(255,255,255,.3)";
const cwhite40 = "rgb(255,255,255,.4)";
const cwhite50 = "rgb(255,255,255,.5)";
const cwhite60 = "rgb(255,255,255,.6)";
const cwhite80 = "rgb(255,255,255,.8)";
const cgrey = "#222";
const cgrey20 = "#DDDDDD";
const cgrey20rgb = "rgb(221,221,221,.8)";
const cgrey60 = "#BBBBBB";
const cgrey80 = "#AAAAAA";

const cbg = cwhite; // light dark mode!
const cfg = cblack;
// <!-- <base href={import.meta.env.BASE_URL} /> -->
---

<!doctype html>
<html lang="de">
  <head>
    <!-- Global Metadata -->

    <meta charset="utf-8" />

    <!-- ist das besser? -->
    <!-- <meta http-equiv="content-type" content="text/html; charset=utf-8"> -->

    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/ae30-logo-icon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"
    ></script>
  </head>
  <body>
    <main>
      <!-- <p>{ggapspx} , {ggapsem} , {gmargin}</p> -->
      <Nav />
      <div class="wrapper">
        <slot />
      </div>
    </main>
  </body>
</html>

<style
  is:global
  define:vars={{
    fsans,
    fsans2,
    fsans3,
    fserif,
    fserif2,
    fsize,
    fline_height,
    fsize_title,
    fsize_h2,
    fsize_h3,
    fsize_h4,
    gmodul,
    gmodulpx,
    gmodulem,
    gcolnum,
    ggaps,
    ggapspx,
    ggapsem,
    gmargin,
    gmarginpx,
    gmarginem,
    caccent,
    caccent2,
    cblack,
    cblack20,
    cblack30,
    cblack50,
    cblack80,
    cwhite,
    cwhite20,
    cwhite30,
    cwhite40,
    cwhite50,
    cwhite60,
    cwhite80,
    cgrey,
    cgrey20,
    cgrey60,
    cgrey20rgb,
    cgrey80,
    cbg,
    cfg,
    vwP,
    vwPl,
    vwT,
    vwS,
    vwM,
    vwL,
    vwTV,
    vwRetina,
  }}
>
  @font-face {
    font-family: "ssp";
    src: url("/fonts/ssp/SourceSansPro-Regular.ttf");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: "scp";
    src: url("/fonts/scp/SourceCodePro-VariableFont_wght.ttf");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  html {
    scroll-behavior: smooth;
  }
  body {
    overflow-x: auto;
    overflow-y: auto;

    color: var(--cfg);
    font-family: var(--fsans);
    font-size: var(--fsize);
    background: var(--cbg);
    /* background: lavender; */
    line-height: var(--fline_height);
  }
  a {
    /* color: var(--caccent); */
    color: var(--cblack50);
    text-decoration: none;
    /* background: var(--cgrey60); */
    /* border-bottom: 1px solid var(--caccent2); */
    transition: color 0.5s ease-in;
    /* font-weight: bold; */
    /* font-weight: 400; */
  }
  a:hover {
    color: var(--cblack);
    /* background: ; */
    /* border-bottom: 1px solid var(--caccent2); */
  }

  .text a {
    /* color: var(--caccent); */
    color: var(--cblack50);
    text-decoration: none;
    /* background: var(--cgrey60); */
    /* border-bottom: 1px solid var(--caccent2); */
    transition: color 0.5s ease-in;
    /* font-weight: bold; */
    /* font-weight: 400; */
  }
  .text a:before {
    font-family: "Material Symbols Rounded Variable";
    content: "arrow_outward";
    font-size: 1em;
    margin-right: 0.25em;
    vertical-align: bottom;
  }
  .text a:hover {
    color: var(--cblack);
    /* background: ; */
    /* border-bottom: 1px solid var(--caccent2); */
  }
  main {
    overflow: hidden;
    /* overflow-x: hidden; */
    /* #BUG mobile!  */
    /* height: 100vh */
    /* background: yellow; */
  }
  .wrapper {
    margin-top: calc(var(--gmodulem) * 3);
    /* background: green ; */
  }
  @media only screen and (min-width: 64em /* var(--vwS) */) {
    .wrapper {
      margin-top: calc(var(--gmodulem) * 4);
      margin-left: var(--gmarginem);
      margin-right: var(--gmarginem);
    }
  }
  @media only screen and (min-width: 85.375em /* var(--vwM) */) {
    .wrapper {
      /* margin: calc( 2 * var(--gmarginem) / 1.5) calc( 2 * var(--gmarginem)) 0 calc( 2 * var(--gmarginem)); */
      margin-left: calc(2 * var(--gmarginem));
      margin-right: calc(2 * var(--gmarginem));
    }
  }
  .link:hover {
    cursor: pointer;
    /* cursor: url(l.cur), auto; */
    /* cursor: url(r.cur), auto; */
    /* cursor: w-resize; */
    /* cursor: e-resize; */
  }
  .hidden {
    display: none;
  }
  figure {
    margin: 0;
  }

  .svg-icon-use {
    stroke-width: 1.5;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: currentColor;
    stroke: currentColor;
  }
  :focus {
    outline: thin;
  }

  .material-symbols-rounded {
    font-variation-settings:
      "FILL" 1,
      "wght" 400,
      "GRAD" 0,
      "opsz" 24;
  }
  .material-symbols-rounded {
    font-family: "Material Symbols Rounded Variable";
    font-weight: normal;
    font-style: normal;
    font-size: 32px;
    display: inline-block;
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
  }

  /* Scrollbar */
  ::-webkit-scrollbar {
    width: 0.5em;
    height: 0.5em;
    border-radius: 0.5em;
    background: none;
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 0.5em;
    background: var(--cblack20);
    -webkit-border-radius: 4ex;
  }
  /* .content::-webkit-scrollbar-thumb {
    border-radius: 0.5em;
    background: var(--cblack20);
    -webkit-border-radius: 4ex;
  } */
  .content::-webkit-scrollbar-corner {
  }
</style>
